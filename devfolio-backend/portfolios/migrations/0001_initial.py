# Generated by Django 5.2.7 on 2025-10-17 05:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='My Portfolio', max_length=200)),
                ('tagline', models.CharField(blank=True, max_length=300)),
                ('bio', models.TextField(blank=True)),
                ('template', models.CharField(choices=[('modern', 'Modern'), ('minimal', 'Minimal'), ('creative', 'Creative')], default='modern', max_length=50)),
                ('primary_color', models.CharField(default='#3B82F6', max_length=7)),
                ('secondary_color', models.CharField(default='#1E40AF', max_length=7)),
                ('font_family', models.CharField(default='Inter', max_length=100)),
                ('subdomain', models.CharField(max_length=100, unique=True)),
                ('custom_domain', models.CharField(blank=True, max_length=255, validators=[django.core.validators.URLValidator()])),
                ('is_published', models.BooleanField(default=False)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
                'db_table': 'portfolios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='portfolios.portfolio')),
            ],
            options={
                'db_table': 'experiences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('display_order', models.IntegerField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='portfolios.portfolio')),
            ],
            options={
                'db_table': 'education',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('frontend', 'Frontend'), ('backend', 'Backend'), ('mobile', 'Mobile'), ('database', 'Database'), ('devops', 'DevOps'), ('design', 'Design'), ('other', 'Other')], max_length=50)),
                ('proficiency', models.IntegerField(default=50)),
                ('display_order', models.IntegerField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='portfolios.portfolio')),
            ],
            options={
                'db_table': 'skills',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('github', 'GitHub'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('youtube', 'YouTube'), ('dribbble', 'Dribbble'), ('behance', 'Behance'), ('medium', 'Medium'), ('dev', 'Dev.to'), ('stackoverflow', 'Stack Overflow'), ('other', 'Other')], max_length=50)),
                ('url', models.URLField()),
                ('display_order', models.IntegerField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='portfolios.portfolio')),
            ],
            options={
                'db_table': 'social_links',
                'ordering': ['display_order'],
                'unique_together': {('portfolio', 'platform')},
            },
        ),
    ]
